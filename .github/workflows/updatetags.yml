name: Update CDN Tags in Files

on:
  workflow_dispatch:
    inputs:
      new_tag:
        description: 'Neuer Tag (z.B. t2)'
        required: true
        default: 't4'

jobs:
  replace-tags:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Load old tags from file or set default
        id: load_old_tags
        run: |
          if [[ -f old_tags.txt ]]; then
            OLD_TAGS=$(cat old_tags.txt)
            echo "Old tags loaded from file: $OLD_TAGS"
          else
            OLD_TAGS="t1,latest,v1.1.1,v1.1.1.1,v1.2.0,v1.3.0,t3,t4"
            echo "No old_tags.txt found, using default: $OLD_TAGS"
          fi
          echo "OLD_TAGS=$OLD_TAGS" >> $GITHUB_ENV

      - name: Set new tag variable
        run: echo "NEW_TAG=${{ github.event.inputs.new_tag }}" >> $GITHUB_ENV

      - name: Find and replace tags in files
        run: |
          IFS=',' read -ra TAGS <<< "$OLD_TAGS"
          DIRS=("docs" "docs/js_components")
          EXTENSIONS=("css" "html" "js")

          for dir in "${DIRS[@]}"; do
            for ext in "${EXTENSIONS[@]}"; do
              find "$dir" -type f -name "*.$ext" | while read -r file; do
                for old_tag in "${TAGS[@]}"; do
                  sed -i "s/@${old_tag}/@${NEW_TAG}/g" "$file"
                done
              done
            done
          done

      - name: Remove any leftover .bak files
        run: |
          find docs docs/js_components -type f -name "*.bak" -delete

      - name: Commit and push changes (inkl. update old_tags.txt)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Alte Tags für nächsten Lauf updaten
          echo "$NEW_TAG" > old_tags.txt
          git add docs old_tags.txt

          if [[ -n $(git status -s) ]]; then
            git commit -m "Update CDN tags to @$NEW_TAG and update old_tags.txt"
            git push
          else
            echo "No changes to commit."
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          name: ${{ env.NEW_TAG }}
          body: "Automatisches Release für den Tag **${{ env.NEW_TAG }}**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
